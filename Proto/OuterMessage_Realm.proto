syntax = "proto3";

package metalife.disco;

///
/// 消息头结构定义
///
message TMsg 
{
    /// 消息类型
    int32 type = 1;
    /// 消息体
    bytes body = 2;
    
    int32 rpc_id = 3;

    ///
    /// 错误信息：如果消息执行错误，则回复错误编码和描述
    /// error_code = 0 表示成功，否则失败
    ///
    int32 error_code = 4;
    string error_string = 5;
}

enum Type 
{
    register_user_c2s = 10000;
    register_user_s2c = 10001;
    get_transfer_endpoint_c2s = 10002;
    get_transfer_endpoint_s2c = 10003;
    authenticate_c2s = 20000;
    authenticate_s2c = 20001;
    heartbeat_c2s = 20002;
    all_sync_s2c = 20003;
    player_enter_s2c = 20004;
    player_leave_s2c = 20005;
    action_req_c2s = 20006;
    action_req_s2c = 20007;
    action_syn_s2c = 20008;
}

///
/// 注册消息
///
message register_user_c2s // IRequest
{
    int32 device_type = 1; // 设备类型
    string device_model = 2;   // 设备型号
    string device_product_id = 3;  // 设备产品ID
    string desc = 8;     // 设备描述
}
/// 返回
message register_user_s2c  // IResponse
{
    int32 user_id = 1;    // 用户ID
}

///
/// 获取数据中转服务endpoint
///
//ResponseType register_user_s2c
message get_transfer_endpoint_c2s  // IMessage
{
    int32 user_id = 1;    // 用户ID
    int32 endpoint_id = 2;    // 端点号
}
/// 返回
message get_transfer_endpoint_s2c // IMessage 
{
    string ip = 1;     // IP
    int32 port = 2;    // Port
    int32 endpoint_id = 3;    // 端点号
}

///
/// 认证请求消息 。 device类型、id相当于一个校验的作用。
///
message authenticate_c2s // IMessage 
{
    int32 user_id = 1;     // 用户ID
    int32 device_type = 2; // 设备类型
    string device_product_id = 3;  // 设备产品ID
}
message authenticate_s2c // IMessage 
{
}

///
/// 心跳消息   定期30秒发一次。若30秒内没发
///
message heartbeat_c2s // IMessage 
{
}

///
/// 全状态同步消息  
///
message all_sync_s2c // IMessage 
{
    int32 house_type = 1;  // 房间类型
    int32 music_id = 2;     // 正在放的音乐
    repeated int32 on_lighting_ids = 3; // 亮着的灯ID数组
    repeated int32 on_dj_ids = 4; // 有人的DJ位置ID数组
    repeated int32 dj_playerids = 5; // DJ玩家ID数组，顺序与on_dj_ids对应   playerid和userid是同一个id，一一对应。以后可能会分开。
    repeated player players = 6;    // 玩家状态数组 这是id
}
message player 
{
    int32 player_id = 1;     // 玩家ID  todo考虑  合并仓库？
    float x = 2;   // 位置x：0-1
    float y = 3;   // 位置y：0-1
    int32 is_dj = 4;   // 是否DJ，0-否，其他-dj编号  2就表示站在2号dj位置上。
    float big_factor = 5;   // 放大因子   多个放大会累积相乘。
    int32 figure_id = 6;   // 形象id   
    string player_name = 7;
}

///
/// 玩家进入消息
///
message player_enter_s2c // IMessage 
{
    player one_player = 1;     // 玩家状态
}

///
/// 玩家离开消息
///
message player_leave_s2c // IMessage 
{
    int32 player_id = 1;     // 玩家ID
}

///
/// 动作请求消息
///
message action_req_c2s // IMessage 
{
    int32 action_id = 1;    // 动作ID  后面约定下。
    int32 int1 = 2;    // 整型内容1
    int32 int2 = 3;    // 整型内容2
    float float1 = 4;    // 浮点型内容1
    float float2 = 5;    // 浮点型内容2
}
message action_req_s2c // IMessage 
{ // 这个不是广播的。
    int32 action_id = 1;    // 动作ID
    int32 int1 = 2;    // 整型内容1
    int32 int2 = 3;    // 整型内容2
    float float1 = 4;    // 浮点型内容1
    float float2 = 5;    // 浮点型内容2
}

///
/// 动作同步消息
///
message action_syn_s2c // IMessage 
{
    int32 player_id = 1;     // 玩家ID
    int32 action_id = 2;    // 动作ID
    int32 int1 = 3;    // 整型内容1
    int32 int2 = 4;    // 整型内容2
    float float1 = 5;    // 浮点型内容1
    float float2 = 6;    // 浮点型内容2
}

